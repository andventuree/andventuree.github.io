.row {
  max-width: $grid-width;
  //breakpoint: if viewport less than 114rem, then use 100%
  margin: 0 auto; //trick to center block elems inside other block elems

  &:not(:last-child) {
    //bottom gutter
    //selects everything except the last child
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include clearfix;

  // Attribute selectors - selects all classes that:
  // [class*="col-"] //contains "col-"
  // [class$="col-"] //ends with "col-"
  // [class^="col-"] //starts with "col-"
  [class^="col-"] {
    // right gutter
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: $gutter-horizontal-small;
      }
    }

    //may be useful in the future but not needed for this project
    // @include respond(tab-port) {
    //   width: 100% !important;
    // }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal})) / 3 + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    @include respond(tab-port) {
      //need to apply this to all col sizes
      width: calc((100% - #{$gutter-horizontal-small} - 10px) / 2);
    }
  }
  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
