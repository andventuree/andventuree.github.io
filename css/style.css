@keyframes moveInLeft {
  0% {
    /* start of animation */
    opacity: 0;
    transform: translateX(-10rem);
    /* x moves right */ }
  80% {
    transform: translateY(1rem);
    /* rotate(180deg) */ }
  100% {
    /* end of animation */
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    /* start of animation */
    opacity: 0;
    transform: translateX(10rem);
    /* x moves right */ }
  80% {
    transform: translateY(-1rem); }
  100% {
    /* end of animation */
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInButton {
  0% {
    /* start of animation */
    opacity: 0;
    transform: translateY(10rem);
    /* Y moves up */ }
  70% {
    /* end of animation */
    opacity: 1;
    transform: translateY(-2rem); }
  100% {
    /* end of animation */
    opacity: 1;
    transform: translateY(0); } }

/* normalize - makes every browser render the same way but since browsers are getting better and better, no need to normalize (wipes all styles, even browser settings)
Rather, just reset to bring back to browser settings*/
*,
*::after,
*::before {
  /* universal selector */
  margin: 0;
  padding: 0;
  /* box-sizing: border-box; */
  /* change box model so border and padding is not added to total height and width specified for a box */
  box-sizing: inherit; }

html {
  /* font-size: 10px; */
  /* used 10px b/c its a clean num| 10px = 1 rem */
  font-size: 62.5%;
  /* default browser f-size is 16px, 100/16 = 62.5, making it completely dynamic */ }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  /* putting font family here will allow all children to inherit (more efficient) */
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  /* times bigger than previous line height */
  color: #777;
  padding: 2rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
  /* fix for shaking from animation, bug no one knows y */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /* since a span is an inline elem, you'll need to change display to change behavior*/
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 1rem;
    animation-name: moveInLeft;
    /* that you've specified below */
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /*there are other distributions of speed */
    /* animation-delay: 3s; */
    /* animation-iteration-count: 3; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.6rem;
    animation: moveInRight 2s ease-out; }

.heading-secondary {
  font-size: 4rem;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 2px;
  display: inline-block;
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
  transition: all 0.4s; }
  .heading-secondary--color {
    background-image: linear-gradient(to right, #00a6fb, #006494);
    -webkit-background-clip: text;
    color: transparent; }
  .heading-secondary--plain {
    color: #eee; }
  .heading-secondary:hover {
    text-shadow: none; }

.heading-tertiary {
  font-size: 2rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-mini {
  margin-bottom: 2rem !important; }

.u-margin-bottom-small {
  margin-bottom: 4rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 6rem !important; }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }

.u-margin-bottom-huge {
  margin-bottom: 10rem !important; }

.u-margin-top-mini {
  margin-top: 2rem !important; }

.u-margin-top-small {
  margin-top: 4rem !important; }

.btn {
  /* psuedo class, style classes under special states. link is specific to a tag */
  /* combine all these psuedo classes to make it feel like a btn press */
  /* in order to have an after effect, you MUST specify content and display prop */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    /* kills blue underline for a tag */
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* this prop must be on intitial state!, just how it works */
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    /* since we want to move it vertical, use -Y */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* y , x , blur , color */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      /* */
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    /* active is in relation to inital link state, not back on hover */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    /* y , x , blur , color */ }
  .btn--white {
    background: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background: #0582ca;
    color: #fff; }
    .btn--green::after {
      background: #0582ca; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInButton 0.5s 0.75s;
    /* .75 is the delay */
    animation-fill-mode: backwards;
    /* will apply 0% animation when page loads so it doesn't appear randomly */ }

.composition {
  position: relative;
  height: 26rem; }
  .composition__photo {
    width: 30%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.5s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 12rem;
      top: 5rem;
      -webkit-clip-path: polygon(0 3%, 100% 3%, 100% 91%, 0 91%);
      clip-path: polygon(0 3%, 100% 3%, 100% 91%, 0 91%);
      /* topLeft, topRight, bottomRight, bottomLeft */
      transform: skew(3deg, -6deg); }
      .composition__photo--p1:hover {
        left: 5rem; }
    .composition__photo--p2 {
      right: 12rem;
      top: 5rem;
      -webkit-clip-path: polygon(0 2%, 100% 2%, 100% 91%, 0 91%);
      clip-path: polygon(0 2%, 100% 2%, 100% 91%, 0 91%);
      /* topLeft, topRight, bottomRight, bottomLeft */
      transform: skew(-3deg, 6deg); }
      .composition__photo--p2:hover {
        right: 5rem; }
    .composition__photo--p3 {
      width: 25%;
      border-radius: 50%;
      left: 37%;
      border: 0.2rem solid #eee; }
      .composition__photo--p3:hover {
        box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
        transform: scale(1.05) translateY(-0.5rem);
        border: 0.2rem solid goldenrod; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.tech-box {
  background-color: rgba(255, 255, 255, 0.7);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.5);
  transition: all 0.2s; }
  .tech-box__icon {
    font-size: 6rem;
    display: inline-block;
    background-image: linear-gradient(to bottom, rgba(0, 100, 148, 0.8), rgba(0, 0, 0, 0.8));
    -webkit-background-clip: text;
    color: transparent; }
  .tech-box:hover {
    transform: translateY(0.3rem) scale(0.99);
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2); }

.project {
  width: 90%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: #fff;
  border-radius: 3px;
  padding: 3rem;
  padding-left: 9rem;
  transform: skewX(-12deg);
  transition: all 0.3s; }
  .project__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    transform: translateX(-3rem) skew(12deg);
    position: relative; }
  .project__img {
    height: 100%;
    transform: scale(1);
    filter: blur(2px) brightness(80%);
    backface-visibility: hidden;
    transition: all 0.5s; }
  .project__text {
    transform: skewX(12deg); }
  .project__link:link, .project__link:visited {
    color: #0582ca;
    text-transform: uppercase;
    text-decoration: none;
    display: inline-block;
    margin: 0 2rem 0 1rem; }
  .project__caption {
    position: absolute;
    top: 23%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: #fff;
    font-size: 5rem;
    text-align: center;
    opacity: 1;
    transition: all 0.5s;
    backface-visibility: hidden; }
  .project:hover {
    transform: translateY(0.3rem) skewX(-12deg) scale(0.99);
    box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.1); }
  .project:hover .project__caption {
    opacity: 0;
    transform: translate(50%, 20%); }
  .project:hover .project__img {
    transform: scale(1.2);
    filter: none; }

.social-network__bubble {
  font-size: 5rem;
  text-shadow: 0.3rem 0.5rem 1rem rgba(0, 0, 0, 0.2);
  perspective: 1000px;
  backface-visibility: hidden; }
  .social-network__bubble:hover {
    /* since we want to move it vertical, use -Y */
    transform: translateY(-0.3rem);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.5); }
    .social-network__bubble:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .social-network__bubble:active {
    /* active is in relation to inital link state, not back on hover */
    transform: translateY(-0.1rem);
    text-shadow: 0.3rem 0.5rem 1rem rgba(0, 0, 0, 0.1); }
  .social-network__bubble::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .social-network__bubble--animated {
    animation: moveInButton 1s 1s;
    /* .75 is the delay */
    animation-fill-mode: backwards;
    /* will apply 0% animation when page loads so it doesn't appear randomly */ }

.social-network__link:link, .social-network__link:visited {
  color: #f7f7f7;
  text-decoration: none;
  display: inline-block;
  margin: 0 2rem 0 1rem; }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: 0.5;
  overflow: hidden;
  border-top-right-radius: 20px;
  border-top-left-radius: 20px; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    object-fit: cover; }

.navbar {
  border-bottom: 1px solid black;
  border-top: 1px solid black; }

.footer {
  padding: 5rem;
  background-image: linear-gradient(to right bottom, rgba(5, 130, 202, 0.8), #006494);
  background-position: bottom;
  border-bottom-left-radius: 20px;
  border-bottom-right-radius: 20px; }

.header {
  height: 97vh;
  background-image: linear-gradient(to right bottom, rgba(0, 166, 251, 0.9), rgba(5, 130, 202, 0.9));
  background-size: cover;
  /* will always try to fit the viewport in the box */
  background-position: top;
  /* if img needs to get cut off, it'll always show position specified. This will cut off bottom */
  /* background-position: center; will crop top and bottom to keep img center */
  -webkit-clip-path: ploygon(0 0, 100% 0, 100% 80%, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
  /* topLeft, topRight, bottomRight, bottomLeft */
  position: relative;
  /* if this relative is not present, the .logo-box would be 40px from top left */
  border-top-right-radius: 20px;
  border-top-left-radius: 20px; }
  .header__text-box {
    position: absolute;
    /*in relation to parent */
    /* we want to center the container to be center of page*/
    top: 50%;
    left: 50%;
    /*% of the parent (container elem) */
    /* but instead of playing w/ the %, (cause 50% doesn't work out right) combine it with transform */
    transform: translate(-50%, -50%);
    /* transforms position of element itself */
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem)) / 3 + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -30vh; }

.section-tech-stack {
  padding: 5rem 0 10rem 0;
  background-image: linear-gradient(to right bottom, rgba(0, 166, 251, 0.8), rgba(0, 100, 148, 0.8)), url(../img/nathan-lemon-392338-unsplash.jpg);
  background-size: cover;
  margin-top: -10rem;
  transform: skewY(-7deg); }
  .section-tech-stack > * {
    transform: skewY(7deg); }

.section-project {
  background-color: #f7f7f7;
  padding: 25rem 0 10rem 0;
  margin-top: -20vh; }
